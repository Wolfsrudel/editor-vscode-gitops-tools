{
	"name": "vscode-gitops-tools",
	"displayName": "GitOps Tools",
	"description": "GitOps automation tools for continuous delivery of Kubernetes and Cloud Native applications",
	"version": "0.15.0",
	"publisher": "weaveworks",
	"engines": {
		"vscode": "^1.59.0",
		"npm": ">=7.0.0"
	},
	"categories": [
		"Azure",
		"Other"
	],
	"keywords": [
		"GitOps",
		"kubernetes",
		"flux",
		"helm",
		"wego",
		"Azure",
		"Arc",
		"AKS",
		"devops"
	],
	"icon": "resources/icons/gitops-logo.png",
	"license": "MPL-2.0",
	"readme": "README.md",
	"repository": {
		"type": "git",
		"url": "https://github.com/weaveworks/vscode-gitops-tools"
	},
	"bugs": "https://github.com/weaveworks/vscode-gitops-tools/issues",
	"homepage": "https://github.com/weaveworks/vscode-gitops-tools",
	"activationEvents": [
		"onCommand:gitops.kubectl.version",
		"onCommand:gitops.suspend",
		"onCommand:gitops.resume",
		"onCommand:gitops.createKustomization",
		"onCommand:gitops.setClusterProvider",
		"onCommand:gitops.flux.check",
		"onCommand:gitops.flux.checkPrerequisites",
		"onCommand:gitops.flux.install",
		"onCommand:gitops.flux.uninstall",
		"onCommand:gitops.flux.reconcileSource",
		"onCommand:gitops.flux.reconcileRepository",
		"onCommand:gitops.flux.reconcileWorkload",
		"onCommand:gitops.views.refreshAllTreeViews",
		"onCommand:gitops.views.refreshSourceTreeView",
		"onCommand:gitops.views.refreshWorkloadTreeView",
		"onCommand:gitops.views.pullGitRepository",
		"onCommand:gitops.views.createGitRepository",
		"onCommand:gitops.views.deleteSource",
		"onCommand:gitops.views.showWorkloadsHelpMessage",
		"onCommand:gitops.copyResourceName",
		"onCommand:gitops.editor.openResource",
		"onCommand:gitops.editor.showLogs",
		"onCommand:gitops.editor.createSource",
		"onCommand:gitops.output.show",
		"onWebviewPanel:createSource",
		"onView:gitops.views.clusters",
		"onView:gitops.views.sources",
		"onView:gitops.views.workloads",
		"onView:gitops.views.documentation"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "gitops.kubectl.version",
				"title": "Kubectl Version",
				"category": "GitOps"
			},
			{
				"command": "gitops.copyResourceName",
				"title": "Copy Name",
				"category": "GitOps"
			},
			{
				"command": "gitops.setClusterProvider",
				"title": "Set Cluster Provider",
				"category": "GitOps"
			},
			{
				"command": "gitops.flux.check",
				"title": "Show Cluster Info",
				"category": "GitOps"
			},
			{
				"command": "gitops.suspend",
				"title": "Suspend",
				"category": "GitOps"
			},
			{
				"command": "gitops.resume",
				"title": "Resume",
				"category": "GitOps"
			},
			{
				"command": "gitops.flux.checkPrerequisites",
				"title": "Flux Check Prerequisites",
				"category": "GitOps"
			},
			{
				"command": "gitops.flux.install",
				"title": "Enable GitOps",
				"category": "GitOps"
			},
			{
				"command": "gitops.flux.uninstall",
				"title": "Disable GitOps",
				"category": "GitOps"
			},
			{
				"command": "gitops.flux.reconcileSource",
				"title": "Reconcile",
				"category": "GitOps"
			},
			{
				"command": "gitops.flux.reconcileRepository",
				"title": "Reconcile Repository",
				"icon": "$(sync)",
				"category": "GitOps"
			},
			{
				"command": "gitops.flux.reconcileWorkload",
				"title": "Reconcile",
				"category": "GitOps"
			},
			{
				"command": "gitops.views.refreshAllTreeViews",
				"title": "Refresh",
				"category": "GitOps",
				"icon": "$(refresh)"
			},
			{
				"command": "gitops.views.refreshSourceTreeView",
				"title": "Refresh Sources View",
				"category": "GitOps",
				"icon": "$(refresh)"
			},
			{
				"command": "gitops.views.refreshWorkloadTreeView",
				"title": "Refresh Workloads View",
				"category": "GitOps",
				"icon": "$(refresh)"
			},
			{
				"command": "gitops.views.pullGitRepository",
				"title": "Pull Git Repository",
				"category": "GitOps"
			},
			{
				"command": "gitops.views.createGitRepository",
				"title": "Create Git Repository Source",
				"category": "GitOps"
			},
			{
				"command": "gitops.createKustomization",
				"title": "Create Kustomization",
				"icon": "$(add)",
				"category": "GitOps"
			},
			{
				"command": "gitops.views.deleteSource",
				"title": "Delete",
				"category": "GitOps"
			},
			{
				"command": "gitops.views.showWorkloadsHelpMessage",
				"title": "Workloads include Helm Releases and Kustomizations, as well as a tree of all other objects created by them",
				"category": "GitOps",
				"icon": "$(question)"
			},
			{
				"command": "gitops.editor.openResource",
				"title": "View Config",
				"category": "GitOps"
			},
			{
				"command": "gitops.editor.createSource",
				"title": "Create Source",
				"category": "GitOps",
				"icon": "$(add)"
			},
			{
				"command": "gitops.output.show",
				"title": "Show Output",
				"category": "GitOps"
			},
			{
				"command": "gitops.editor.showLogs",
				"title": "Show Logs",
				"category": "GitOps"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "gitops",
					"title": "GitOps",
					"icon": "resources/icons/gitops-logo.png"
				}
			]
		},
		"views": {
			"gitops": [
				{
					"id": "gitops.views.clusters",
					"name": "Clusters"
				},
				{
					"id": "gitops.views.sources",
					"name": "Sources"
				},
				{
					"id": "gitops.views.workloads",
					"name": "Workloads"
				},
				{
					"id": "gitops.views.documentation",
					"name": "Documentation"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "gitops.views.clusters",
				"contents": "Loading Clusters ...",
				"when": "gitops:loadingClusters"
			},
			{
				"view": "gitops.views.clusters",
				"contents": "No clusters.",
				"when": "!gitops:loadingClusters && gitops:noClusters"
			},
			{
				"view": "gitops.views.sources",
				"contents": "[Enable GitOps](command:gitops.flux.install) for the selected Cluster to view Sources.",
				"when": "gitops:currentClusterGitOpsNotEnabled && !gitops:noClusterSelected"
			},
			{
				"view": "gitops.views.sources",
				"contents": "Loading Sources ...",
				"when": "gitops:loadingSources && !gitops:noClusterSelected && !gitops:currentClusterGitOpsNotEnabled"
			},
			{
				"view": "gitops.views.sources",
				"contents": "No sources.",
				"when": "!gitops:loadingSources && !gitops:currentClusterGitOpsNotEnabled && !gitops:noClusterSelected && gitops:noSources"
			},
			{
				"view": "gitops.views.sources",
				"contents": "Select GitOps Cluster to view Sources.",
				"when": "gitops:noClusterSelected"
			},
			{
				"view": "gitops.views.workloads",
				"contents": "[Enable GitOps](command:gitops.flux.install) for the selected Cluster to view Workloads.",
				"when": "gitops:currentClusterGitOpsNotEnabled"
			},
			{
				"view": "gitops.views.workloads",
				"contents": "Loading Workloads ...",
				"when": "gitops:loadingWorkloads && !gitops:noClusterSelected && !gitops:currentClusterGitOpsNotEnabled"
			},
			{
				"view": "gitops.views.workloads",
				"contents": "No workloads.",
				"when": "!gitops:loadingWorkloads && !gitops:currentClusterGitOpsNotEnabled && !gitops:noClusterSelected && gitops:noWorkloads"
			},
			{
				"view": "gitops.views.workloads",
				"contents": "Select GitOps Cluster to view Workloads.",
				"when": "gitops:noClusterSelected"
			},
			{
				"view": "gitops.views.documentation",
				"contents": "Loading Topics ..."
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "gitops.views.refreshAllTreeViews",
					"group": "navigation",
					"when": "view == gitops.views.clusters"
				},
				{
					"command": "gitops.editor.createSource",
					"group": "navigation@0",
					"when": "view == gitops.views.sources && !gitops:loadingClusters && !gitops:noClusterSelected && !gitops:currentClusterGitOpsNotEnabled"
				},
				{
					"command": "gitops.createKustomization",
					"group": "navigation@0",
					"when": "view == gitops.views.workloads && workspaceFolderCount > 0"
				},
				{
					"command": "gitops.flux.reconcileRepository",
					"group": "navigation@0",
					"when": "view == gitops.views.sources && gitops:openFolderGitRepositoryExistDetermined && gitops:openFolderGitRepositoryExist"
				},
				{
					"command": "gitops.views.refreshSourceTreeView",
					"group": "navigation@1",
					"when": "view == gitops.views.sources"
				},
				{
					"command": "gitops.views.refreshWorkloadTreeView",
					"group": "navigation@1",
					"when": "view == gitops.views.workloads"
				},
				{
					"command": "gitops.views.showWorkloadsHelpMessage",
					"group": "navigation@2",
					"when": "view == gitops.views.workloads"
				}
			],
			"view/item/context": [
				{
					"command": "gitops.flux.check",
					"when": "view == gitops.views.clusters && viewItem =~ /cluster;/"
				},
				{
					"command": "gitops.setClusterProvider",
					"when": "view == gitops.views.clusters && viewItem =~ /cluster;/"
				},
				{
					"command": "gitops.flux.install",
					"when": "view == gitops.views.clusters && viewItem =~ /clusterGitOpsNotEnabled;/"
				},
				{
					"command": "gitops.flux.uninstall",
					"when": "view == gitops.views.clusters && viewItem =~ /clusterGitOpsEnabled;/"
				},
				{
					"command": "gitops.flux.reconcileSource",
					"when": "view == gitops.views.sources && viewItem =~ /(GitRepository;|HelmRepository;|Bucket;)/",
					"group": "navigation@0"
				},
				{
					"command": "gitops.suspend",
					"when": "view =~ /(gitops.views.sources|gitops.views.workloads)/ && viewItem =~ /(GitRepository;|Kustomization;|HelmRelease;)/ && viewItem =~ /notSuspend;/",
					"group": "navigation@1"
				},
				{
					"command": "gitops.resume",
					"when": "view =~ /(gitops.views.sources|gitops.views.workloads)/ && viewItem =~ /(GitRepository;|Kustomization;|HelmRelease;)/ && viewItem =~ /suspend;/",
					"group": "navigation@1"
				},
				{
					"command": "gitops.views.deleteSource",
					"when": "view == gitops.views.sources && viewItem =~ /(GitRepository;|HelmRepository;|Bucket;)/",
					"group": "navigation@2"
				},
				{
					"command": "gitops.views.pullGitRepository",
					"when": "view == gitops.views.sources && viewItem =~ /GitRepository;/",
					"group": "navigation@3"
				},
				{
					"command": "gitops.flux.reconcileWorkload",
					"when": "view == gitops.views.workloads && viewItem =~ /(Kustomization;|HelmRelease;)/",
					"group": "navigation@2"
				},
				{
					"command": "gitops.editor.showLogs",
					"when": "view =~ /^(gitops.views.clusters)$/ && viewItem =~ /(Deployment;)/"
				},
				{
					"command": "gitops.copyResourceName",
					"when": "view =~ /^(gitops.views.sources|gitops.views.workloads)$/",
					"group": "navigation@9"
				}
			],
			"explorer/context": [
				{
					"command": "gitops.views.createGitRepository",
					"when": "gitops:openFolderGitRepositoryExistDetermined && !gitops:openFolderGitRepositoryExist"
				},
				{
					"command": "gitops.flux.reconcileRepository",
					"when": "gitops:openFolderGitRepositoryExistDetermined && gitops:openFolderGitRepositoryExist"
				},
				{
					"command": "gitops.createKustomization"
				}
			],
			"commandPalette": [
				{
					"command": "gitops.editor.openResource",
					"when": "never"
				},
				{
					"command": "gitops.suspend",
					"when": "never"
				},
				{
					"command": "gitops.resume",
					"when": "never"
				},
				{
					"command": "gitops.flux.check",
					"when": "never"
				},
				{
					"command": "gitops.flux.install",
					"when": "never"
				},
				{
					"command": "gitops.flux.uninstall",
					"when": "never"
				},
				{
					"command": "gitops.flux.reconcileSource",
					"when": "never"
				},
				{
					"command": "gitops.flux.reconcileWorkload",
					"when": "never"
				},
				{
					"command": "gitops.editor.showLogs",
					"when": "never"
				},
				{
					"command": "gitops.views.pullGitRepository",
					"when": "never"
				},
				{
					"command": "gitops.views.deleteSource",
					"when": "never"
				},
				{
					"command": "gitops.flux.reconcileRepository",
					"when": "never"
				},
				{
					"command": "gitops.setClusterProvider",
					"when": "never"
				},
				{
					"command": "gitops.copyResourceName",
					"when": "never"
				},
				{
					"command": "gitops.views.showWorkloadsHelpMessage",
					"when": "never"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "webpack",
		"watch": "webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"test-compile": "tsc -p ./",
		"test-watch": "tsc -watch -p ./",
		"pretest": "npm run test-compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"extensionDependencies": [
		"ms-kubernetes-tools.vscode-kubernetes-tools"
	],
	"devDependencies": {
		"@types/git-url-parse": "^9.0.1",
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.0.0",
		"@types/node": "14.x",
		"@types/semver": "^7.3.9",
		"@types/shelljs": "^0.8.9",
		"@types/vscode": "^1.59.0",
		"@types/vscode-webview": "^1.57.0",
		"@typescript-eslint/eslint-plugin": "^5.7.0",
		"@typescript-eslint/parser": "^5.7.0",
		"eslint": "^8.4.1",
		"glob": "^7.2.0",
		"mocha": "^9.1.3",
		"ts-loader": "^9.2.6",
		"typescript": "^4.5.4",
		"vscode-test": "^1.6.1",
		"webpack": "^5.64.4",
		"webpack-cli": "^4.9.1"
	},
	"dependencies": {
		"@kubernetes/client-node": "^0.16.1",
		"git-url-parse": "^11.6.0",
		"semver": "^7.3.5",
		"shelljs": "^0.8.4",
		"vscode-kubernetes-tools-api": "^1.3.0"
	}
}
